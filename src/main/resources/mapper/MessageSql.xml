<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="devster.semi.mapper.MessageMapper">

    <!--메세지 리스트 가져오기-->
    <select id="getMessageList" parameterType="MessageDto" resultType="MessageDto">
        select mes_idx, room, send_nick, recv_nick, date_format(send_time, '%Y-%m-%d %H:%i') send_time, read_time, content, read_chk
        from message
        where mes_idx in (select max(mes_idx) from message group by room) and (send_nick=#{nick} or recv_nick=#{nick})
        order by mes_idx desc
    </select>

    <!-- 메세지 list에서 상대방 profile 가져오기 -->
    <select id="getOtherProfile" parameterType="MessageDto" resultType="String">
        select m_photo from member
        <choose>
            <when test="send_nick == nick">
                where m_nickname = #{recv_nick}
            </when>
            <otherwise>
                where m_nickname = #{send_nick}
            </otherwise>
        </choose>
    </select>

    <!-- 안읽은 메세지 갯수 가져오기 -->
    <select id="getUnreadCount" parameterType="MessageDto" resultType="int">
        select count(mes_idx) from message
        where recv_nick=#{nick} and read_chk=0 and room=#{room}
    </select>

    <!-- 메세지 내용 가져오기 -->
    <select id="getRoomContentList" parameterType="MessageDto" resultType="MessageDto">
        select msg.mes_idx, msg.room, msg.send_nick, msg.recv_nick, date_format(msg.send_time, '%Y-%m-%d %H:%i') send_time, msg.read_time, msg.content, msg.read_chk, m.m_photo
        from message msg left outer join member m
        on msg.send_nick = m.m_nickname
        <choose>
            <when test="room !=0">
                where room=#{room}
            </when>
            <otherwise>
                where (recv_nick = #{recv_nick} and send_nick = #{nick}) or (send_nick = #{recv_nick} and recv_nick = #{nick})
            </otherwise>
        </choose>

    </select>

    <!-- 메세지 읽음 처리 -->
    <update id="MessageReadChk" parameterType="MessageDto">
        update message set read_chk=1
        <choose>
            <when test="room !=0">
                where room=#{room} and read_chk=0 and recv_nick=#{nick}
            </when>
            <otherwise>
                where send_nick=#{recv_nick} and read_chk=0 and recv_nick=#{nick}
            </otherwise>
        </choose>
    </update>

    <!-- 메세지 리스트에서 메세지 보내기 -->
    <insert id="MessageSendInList" parameterType="MessageDto">
        <choose>
            <when test="room !=0">
                insert into message values(0, #{room}, #{send_nick}, #{recv_nick}, now(), now(), #{content}, 0);
            </when>
            <otherwise>
                insert into message values(0, #{room}, #{send_nick}, #{recv_nick}, now(), now(), #{content}, 0);
            </otherwise>
        </choose>
    </insert>

    <!-- room 번호 최댓값 구하기-->
    <select id="getMaxRoom" parameterType="MessageDto" resultType="int">
        select max(room) from message
    </select>

    <!-- 메세지 이력이 있는지 검색-->
    <select id="getExistChat" parameterType="MessageDto" resultType="int">
        select count(mes_idx) from message
        where (recv_nick = #{recv_nick} and send_nick=#{send_nick}) or (send_nick = #{recv_nick} and recv_nick=#{send_nick})
    </select>

    <!-- 기존 메세지 내역의 room 번호를 가져옴 -->
    <select id="getSelectRoom" parameterType="MessageDto" resultType="String">
        select room from message
        where (recv_nick = #{recv_nick} and send_nick=#{send_nick}) or (send_nick = #{recv_nick} and recv_nick=#{send_nick})
        limit 0,1
    </select>


</mapper>
















